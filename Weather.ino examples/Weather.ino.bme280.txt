// -----------------------------------------------------------------------------------------------------------------
// Weather functions

#include <Wire.h>
bool outsideTempGood=false, skyTempGood=false, windspeedGood=false, pressureGood=false, humidityGood=false, rainGood=false, skyQualityGood=false;

// =================================================================================================================
// =================================== add your weather sensor support below =======================================

// this is the Weather.ino file for my setup

#include <Adafruit_Sensor.h> // https://github.com/adafruit/Adafruit_Sensor

// -----------------------------------------------------------------------------------------------------------------
// gets outside temperature in deg. C

#include <Adafruit_BME280.h> // I2C address 0x76 or 0x77; https://github.com/adafruit/Adafruit_BME280_Library
Adafruit_BME280 bme;

// return (invalid) if not implemented or if there's an error
double weatherOutsideTemp() {
  if (!outsideTempGood) return invalid;

  double t = bme.readTemperature();
  if (t<-60.0 || t>60.0) t=invalid;
  return t;
}

bool initOutsideTemp() {
  bool success=true;
  if (!bme.begin(0x76,&Wire)) success=false;
  return success;
}

// -----------------------------------------------------------------------------------------------------------------
// gets sky IR temperature in deg. C

// return (invalid) if not implemented or if there's an error
double weatherSkyTemp() {
  if (!skyTempGood) return invalid;
  return invalid;
}

bool initSkyTemp() {
  return false;
}

// -----------------------------------------------------------------------------------------------------------------
// gets windspeed in kph

// return (invalid) if not implemented or if there's an error
double weatherWindspeed() {
  if (!windspeedGood) return invalid;
  return invalid;
}

bool initWindspeed() {
  return true;
}

// -----------------------------------------------------------------------------------------------------------------
// gets barometric pressure in mb

// return (invalid) if not implemented or if there's an error; absolute pressure
double weatherPressure() {
  if (!pressureGood) return invalid;
  
  double p0 = bme.readPressure()/100.0;  // hpa to millibar
  return p0;
}

// return (invalid) if not implemented or if there's an error; sea-level adjusted pressure
double weatherPressureSeaLevel() {
  if (!pressureGood) return invalid;
  
  double p0=bme.readPressure();
  double p1=(p0/pow((1.0-((float)(WEATHER_ALTITUDE))/44330.0), 5.255))/100.0;
  return p1;
}

bool initPressure() {
  return outsideTempGood; // BME280 was initialized in initOutsideTemp()
}

// -----------------------------------------------------------------------------------------------------------------
// gets relative humidity in %

// return (invalid) if not implemented or if there's an error
double weatherHumidity() {
  if (!humidityGood) return invalid;

  double h=bme.readHumidity();
  if (h<0.0) h=invalid;
  if (h>100.0) h=100.0;
  return h;
}

bool initHumidity() {
  return outsideTempGood; // BME280 was initialized in initOutsideTemp()
}

// -----------------------------------------------------------------------------------------------------------------
// gets rain sensor info. 1 is Rain, 2 is Warn, and 3 is Dry

// return (invalid) if not implemented or if there's an error
int weatherRain() {
  if (!rainGood) return invalid;
  return invalid;
}

bool initRain() {
  return true;
}

// -----------------------------------------------------------------------------------------------------------------
// gets sky brightness in mag/arc-sec^2

// return (invalid) if not implemented or if there's an error
double weatherSkyQuality() {
  if (!skyQualityGood) return invalid;
  return invalid;
}

bool initSkyQuality() {
  return false;
}

// ============================= no user changes are required beyond this point ====================================
// =================================================================================================================

// -----------------------------------------------------------------------------------------------------------------
// this gets called once on startup to initialize any weather sensors
void weatherInit() {
  // slow down i2c so long distances work, still plenty fast for our little data being moved around
  Wire.setClock(20000);
  analogReference(DEFAULT);

  // wiring has pullups enabled, for a 3.3V I2C device this isn't a good thing even this hack isn't 100% perfect 
  // since 5V is applied for an instant at startup use a level converter if this causes you to loose sleep

#if DEBUG_WEATHER == ON
  Serial.println("Debug weather start");
#endif

  outsideTempGood=initOutsideTemp();
  pinMode(20,INPUT); pinMode(21,INPUT);
#if DEBUG_WEATHER == ON
  if (outsideTempGood) Serial.println("OUTSIDE TEMP sense up"); else Serial.println("OUTSIDE TEMP sense fail");
#endif

  skyTempGood=initSkyTemp();
  pinMode(20,INPUT); pinMode(21,INPUT);
#if DEBUG_WEATHER == ON
  if (skyTempGood) Serial.println("SKY IR sense up"); else Serial.println("SKY IR sense fail");
#endif

  windspeedGood=initWindspeed();
  pinMode(20,INPUT); pinMode(21,INPUT);
#if DEBUG_WEATHER == ON
  if (windspeedGood) Serial.println("WINDSPEED sense up"); else Serial.println("WINDSPEED sense fail");
#endif

  pressureGood=initPressure();
  pinMode(20,INPUT); pinMode(21,INPUT);
#if DEBUG_WEATHER == ON
  if (pressureGood) Serial.println("PRESSURE sense up"); else Serial.println("PRESSURE sense fail");
#endif

  humidityGood=initHumidity();
  pinMode(20,INPUT); pinMode(21,INPUT);
#if DEBUG_WEATHER == ON
  if (humidityGood) Serial.println("HUMIDITY sense up"); else Serial.println("HUMIDITY sense fail");
#endif

  rainGood=initRain();
  pinMode(20,INPUT); pinMode(21,INPUT);
#if DEBUG_WEATHER == ON
  if (rainGood) Serial.println("RAIN sense up"); else Serial.println("RAIN sense fail");
#endif

  skyQualityGood=initSkyQuality();
  pinMode(20,INPUT); pinMode(21,INPUT);
#if DEBUG_WEATHER == ON
  if (skyQualityGood) Serial.println("SKY QUAL up"); else Serial.println("SKY QUAL fail");
#endif
}
